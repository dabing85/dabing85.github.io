{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"rabbitmq\" category",
    "description": "欢迎来到大冰的笔记空间~这里主要会记录编程学习笔记🌸",
    "home_page_url": "https://blog.dabing.cool",
    "items": [
        {
            "id": "https://blog.dabing.cool/javamore/RabbitMQ/RabbitMQ-%E7%AE%80%E5%8D%95%E6%96%B9%E5%BC%8F/",
            "url": "https://blog.dabing.cool/javamore/RabbitMQ/RabbitMQ-%E7%AE%80%E5%8D%95%E6%96%B9%E5%BC%8F/",
            "title": "RabbitMQ入门（聊天室）-简单模式",
            "date_published": "2022-09-09T16:00:00.000Z",
            "content_html": "<h1 id=\"rabbitmq入门\"><a class=\"markdownIt-Anchor\" href=\"#rabbitmq入门\">#</a> RabbitMQ 入门</h1>\n<p>官网： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmFiYml0bXEuY29tLw==\">https://www.rabbitmq.com/</span></p>\n<p>Java 简单模式文档参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmFiYml0bXEuY29tL3R1dG9yaWFscy90dXRvcmlhbC1vbmUtamF2YS5odG1s\">https://www.rabbitmq.com/tutorials/tutorial-one-java.html</span></p>\n<p>需求：使用简单模式完成消息传递</p>\n<p>步骤：</p>\n<p>① 创建工程（生成者、消费者）</p>\n<p>② 分别添加依赖</p>\n<p>③ 编写生产者发送消息</p>\n<p>④ 编写消费者接收消息</p>\n<h2 id=\"1-搭建示例工程\"><a class=\"markdownIt-Anchor\" href=\"#1-搭建示例工程\">#</a> 1. 搭建示例工程</h2>\n<h3 id=\"11-创建工程\"><a class=\"markdownIt-Anchor\" href=\"#11-创建工程\">#</a> 1.1. 创建工程</h3>\n<p>创建项目： <code>rabbitmq-producer</code></p>\n<p><img data-src=\"http://image.dabing.cool/image/image-20220902094203897.png\" alt=\"image-20220902094203897\"></p>\n<p>创建项目： <code>rabbitmq-consumer</code></p>\n<p><img data-src=\"http://image.dabing.cool/image/image-20220902094209384.png\" alt=\"image-20220902094209384\"></p>\n<h3 id=\"12-添加依赖\"><a class=\"markdownIt-Anchor\" href=\"#12-添加依赖\">#</a> 1.2. 添加依赖</h3>\n<p>往两个 rabbitmq 的 pom.xml 文件中添加如下依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.rabbitmq<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>amqp-client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.6.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.maven.plugins<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>maven-compiler-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.8.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>source</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>target</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>target</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"2-编写生产者\"><a class=\"markdownIt-Anchor\" href=\"#2-编写生产者\">#</a> 2. 编写生产者</h2>\n<p>编写消息生产者  <code>com.atguigu.rabbitmq.simple.Producer</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>simple</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Channel</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Connection</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConnectionFactory</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 创建连接工厂</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">ConnectionFactory</span> connectionFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 主机地址</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        connectionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.6.100\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 连接端口；默认为 5672</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        connectionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span><span class=\"token number\">5672</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 虚拟主机名称；默认为 /</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        connectionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setVirtualHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 连接用户名；默认为 guest</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        connectionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 连接密码；默认为 guest</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        connectionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">// 创建连接</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">Connection</span> connection <span class=\"token operator\">=</span> connectionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">newConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 创建频道</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">createChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 声明（创建）队列</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>         * queue      参数 1：队列名称</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>         * durable    参数 2：是否定义持久化队列，当 mq 重启之后，还在</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>         * exclusive  参数 3：是否独占本次连接</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>         *            ① 是否独占，只能有一个消费者监听这个队列</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>         *            ② 当 connection 关闭时，是否删除队列</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>         * autoDelete 参数 4：是否在不使用的时候自动删除队列，当没有 consumer 时，自动删除</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>         * arguments  参数 5：队列其它参数</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"simple_queue\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre> </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">// 要发送的信息</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"你好；小兔子！\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>         * 参数 1：交换机名称，如果没有指定则使用默认 Default Exchage</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>         * 参数 2：路由 key, 简单模式可以传递队列名称</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         * 参数 3：配置信息</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         * 参数 4：消息内容</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicPublish</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"simple_queue\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已发送消息：\"</span> <span class=\"token operator\">+</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre> </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\">// 关闭资源</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        connection<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行程序：<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguNi4xMDA6MTU2NzI=\">http://192.168.6.100:15672</span> <code> </code></p>\n<p>在执行上述的消息发送之后；可以登录 rabbitMQ 的管理控制台，可以发现队列和其消息： <img data-src=\"http://image.dabing.cool/image/image-20220902094308205.png\" alt=\"image-20220902094308205\"></p>\n<h2 id=\"3-编写消费者\"><a class=\"markdownIt-Anchor\" href=\"#3-编写消费者\">#</a> 3. 编写消费者</h2>\n<p>编写消息的消费者  <code>com.atguigu.rabbitmq.simple.Consumer</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>simple</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeoutException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Consumer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">//1. 创建连接工厂</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">ConnectionFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">//2. 设置参数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.6.100\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//ip</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span><span class=\"token number\">5672</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 端口  默认值 5672</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setVirtualHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 虚拟机 默认值 /</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 用户名</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 密码</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">//3. 创建连接 Connection</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">Connection</span> connection <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">newConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">//4. 创建 Channel</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">createChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">//5. 创建队列 Queue</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        queueDeclare (String queue, boolean durable, boolean exclusive, boolean autoDelete, Map&lt;String, Object> arguments)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        参数：</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            1. queue：队列名称</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            2. durable：是否持久化，当 mq 重启之后，还在</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            3. exclusive：</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                * 是否独占。只能有一个消费者监听这队列</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                * 当 Connection 关闭时，是否删除队列</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            4. autoDelete：是否自动删除。当没有 Consumer 时，自动删除掉</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            5. arguments：参数。</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">// 如果没有一个名字叫 simple_queue 的队列，则会创建该队列，如果有则不会创建</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"simple_queue\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">// 接收消息</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token class-name\">DefaultConsumer</span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultConsumer</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>               回调方法，当收到消息后，会自动执行该方法</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>               1. consumerTag：标识</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>               2. envelope：获取一些信息，交换机，路由 key...</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>               3. properties：配置信息</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>               4. body：数据</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            */</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleDelivery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> consumerTag<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Envelope</span> envelope<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AMQP<span class=\"token punctuation\">.</span>BasicProperties</span> properties<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"consumerTag：\"</span><span class=\"token operator\">+</span>consumerTag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Exchange：\"</span><span class=\"token operator\">+</span>envelope<span class=\"token punctuation\">.</span><span class=\"token function\">getExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RoutingKey：\"</span><span class=\"token operator\">+</span>envelope<span class=\"token punctuation\">.</span><span class=\"token function\">getRoutingKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"properties：\"</span><span class=\"token operator\">+</span>properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body：\"</span><span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        basicConsume (String queue, boolean autoAck, Consumer callback)</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        参数：</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            1. queue：队列名称</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            2. autoAck：是否自动确认，类似咱们发短信，发送成功会收到一个确认消息</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            3. callback：回调对象</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token comment\">// 消费者类似一个监听程序，主要是用来监听消息</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"simple_queue\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>consumer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行程序</p>\n<p><img data-src=\"https://image.dabing.cool/image/image-20220917235627876.png\" alt=\"image-20220917235627876\"></p>\n<h2 id=\"4-小结\"><a class=\"markdownIt-Anchor\" href=\"#4-小结\">#</a> 4. 小结</h2>\n<p>上述的入门案例中中其实使用的是如下的简单模式：</p>\n<p><img data-src=\"https://image.dabing.cool/image/image-20220917235608323.png\" alt=\"image-20220917235608323\"></p>\n<p>在上图的模型中，有以下概念：</p>\n<ul>\n<li>P：生产者，也就是要发送消息的程序</li>\n<li>C：消费者：消息的接受者，会一直等待消息到来。</li>\n<li>queue：消息队列，图中红色部分。类似一个邮箱，可以缓存消息；生产者向其中投递消息，消费者从其中取出消息。</li>\n</ul>\n<h1 id=\"简易聊天室\"><a class=\"markdownIt-Anchor\" href=\"#简易聊天室\">#</a> 简易聊天室</h1>\n<p><strong>效果：</strong></p>\n<p><img data-src=\"https://image.dabing.cool/image/image-20220917235819321.png\" alt=\"image-20220917235819321\"></p>\n<p><img data-src=\"https://image.dabing.cool/image/image-20220917235835334.png\" alt=\"image-20220917235835334\"></p>\n<p>因为创建连接部分是公共部分，就不重复写了，可以写一个工具类。</p>\n<p>main 方法也差不多，只不过改改队列名而已。也是瞎写的，反正实现了功能，如果有什么不对的望指点。</p>\n<p><strong>聊天者 1：</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> worker1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">DABING_QUEUE</span><span class=\"token operator\">=</span><span class=\"token string\">\"dabing\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">CZH_QUEUE</span><span class=\"token operator\">=</span><span class=\"token string\">\"czh\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 生产者</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">ConnUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DABING_QUEUE</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">DefaultConsumer</span> consumer<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultConsumer</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleDelivery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> consumerTag<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Envelope</span> envelope<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AMQP<span class=\"token punctuation\">.</span>BasicProperties</span> properties<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请在控制台输入信息，回车确认!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CZH_QUEUE</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> consumer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">String</span> message<span class=\"token operator\">=</span><span class=\"token string\">\"小冰冰 : \"</span><span class=\"token operator\">+</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicPublish</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token constant\">DABING_QUEUE</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">hasNextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送完毕！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>聊天者 2：</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> worker2 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">DABING_QUEUE</span><span class=\"token operator\">=</span><span class=\"token string\">\"dabing\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">CZH_QUEUE</span><span class=\"token operator\">=</span><span class=\"token string\">\"czh\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 生产者</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">ConnUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CZH_QUEUE</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">DefaultConsumer</span> consumer<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultConsumer</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleDelivery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> consumerTag<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Envelope</span> envelope<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AMQP<span class=\"token punctuation\">.</span>BasicProperties</span> properties<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请在控制台输入信息，回车确认!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DABING_QUEUE</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> consumer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">String</span> message<span class=\"token operator\">=</span><span class=\"token string\">\"小辉辉 : \"</span><span class=\"token operator\">+</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicPublish</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token constant\">CZH_QUEUE</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">hasNextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送完毕！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "RabbitMQ"
            ]
        }
    ]
}